import * as React from 'react';
const createStore = getInitialState => {
  const listeners = [];
  let state = getInitialState();
  const getState = () => state;
  const setState = newState => {
    state = newState;
    listeners.forEach(listener => listener());
  };
  const subscribe = callback => {
    listeners.push(callback);
    return () => {
      const index = listeners.indexOf(callback);
      if (index > -1) {
        listeners.splice(index, 1);
      }
    };
  };
  return {
    getState,
    setState,
    subscribe
  };
};
export function useSyncState(getInitialState) {
  const store = React.useRef(createStore(getInitialState)).current;
  const state = React.useSyncExternalStore(store.subscribe, store.getState, store.getState);
  React.useDebugValue(state);
  return [state, store.getState, store.setState];
}
//# sourceMappingURL=useSyncState.js.map